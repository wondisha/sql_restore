name: Restore Prod -> Dev (Template)

on:
  workflow_dispatch:
    inputs:
      backup_url:
        description: 'URL or local/UNC path to the production backup (can include SAS token)'
        required: true
      target_database:
        description: 'Target database name in dev'
        required: true
      post_restore_script:
        description: 'Optional path to post-restore SQL script (on runner)'
        required: false
      execute:
        description: 'Set to "true" to perform the restore. Default is dry-run only.'
        required: false
        default: 'false'

jobs:
  restore:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dry-run restore (generate RESTORE SQL only)
        shell: pwsh
        run: |
          $backup = "${{ github.event.inputs.backup_url }}"
          $target = "${{ github.event.inputs.target_database }}"
          Write-Host "Dry-run: building restore SQL for $backup -> $target"
          $dry = Join-Path $env:GITHUB_WORKSPACE 'scripts\dry_run_restore.ps1'
          if (-not (Test-Path $dry)) { Write-Error "dry-run script not found at $dry"; exit 2 }
          & $dry -BackupPath $backup -TargetDatabase $target

      - name: Execute restore (only if requested)
        if: ${{ github.event.inputs.execute == 'true' }}
        shell: pwsh
        run: |
          Write-Host "Executing actual restore (user requested execute=true)"
          $backup = "${{ github.event.inputs.backup_url }}"
          $target = "${{ github.event.inputs.target_database }}"
          $script = Join-Path $env:GITHUB_WORKSPACE 'scripts\restore-prod-to-dev.ps1'
          if (-not (Test-Path $script)) { Write-Error "restore script not found at $script"; exit 2 }
          & $script -BackupUrl $backup -TargetDatabase $target -PostRestoreScript "${{ github.event.inputs.post_restore_script }}"
